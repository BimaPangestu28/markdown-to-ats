# ============================================================================
# Docker Compose Production Configuration
# Optimized for production deployment with security and performance
# ============================================================================

version: '3.8'

services:
  # ============================================================================
  # CV Generator Application - Production
  # ============================================================================
  cv-generator:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cv-generator-prod
    restart: unless-stopped
    ports:
      - "80:8081"
    environment:
      - NODE_ENV=production
      - PORT=8081
      # Security headers
      - HELMET_ENABLED=true
      # Rate limiting
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_MAX=100
    volumes:
      # Persistent storage with proper permissions
      - uploads_data:/app/public/uploads:rw
      # Read-only template
      - ./template.md:/app/template.md:ro
    networks:
      - cv-generator-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8081/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    labels:
      - "com.docker.compose.project=cv-generator"
      - "com.docker.compose.service=cv-generator"

  # ============================================================================
  # Reverse Proxy (Optional - Nginx)
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: cv-generator-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - cv-generator-network
    depends_on:
      - cv-generator
    profiles:
      - nginx

# ============================================================================
# Named Volumes - Production
# ============================================================================
volumes:
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/cv-generator/uploads

# ============================================================================
# Networks - Production
# ============================================================================
networks:
  cv-generator-network:
    driver: bridge
    name: cv-generator-prod-net
    ipam:
      config:
        - subnet: 172.20.0.0/16